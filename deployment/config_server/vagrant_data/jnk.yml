---
  - hosts: nodes
    become: yes
    #variable setup
    vars:
      jenkins_java_args: 'JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupwizard=false"'
      jenkins_defaults_file: /etc/default/jenkins
      jenkins_home: /var/lib/jenkins
      jenkins_hostname: localhost
      jenkins_http_port: 8080
      jenkins_admin_username: admin
      jenkins_admin_password: admin
      jenkins_repo_url: "deb https://pkg.jenkins.io/debian binary/"
      jenkins_repo_key_url: https://pkg.jenkins.io/debian/jenkins.io.key
      cli_jar_url: http://localhost:8080/jnlpJars/jenkins-cli.jar
      jenkins_connection_delay: 20
      jenkins_jar_location: /opt/jenkins-cli.jar
      job_name: PatientsApp
      packages:
        # - nginx
        - git-core
        # - gcc
        # - default-jdk
        # - openjdk-7-jdk
        - git
        - ant

    tasks:
      #install java 8

      # - name: add repo for java 8
      #   apt_repository: repo='ppa:webupd8team/java' state=present
      #
      # - name: set licence selected
      #   shell: /bin/echo debconf shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
      #   sudo: yes
      #
      # - name: set licence seen
      #   shell: /bin/echo debconf shared/accepted-oracle-license-v1-1 seen true | /usr/bin/debconf-set-selections
      #   sudo: yes
      #
      # - name: install java 8
      #   apt:
      #     name: oracle-java8-installer
      #     state: latest
      #     update-cache: yes
      #     force: yes
      #   sudo: yes
      #install java 8 - end

      #update packages and istall jenkins
      - name: updating apt packages
        become: yes
        action: apt update_cache=yes state=latest

      - name: download jenkins
        shell: wget -q -O - https://pkg.jenkins.io/debian/jenkins-ci.org.key | sudo apt-key add -
        become: yes

      - name: update jenkins source list
        shell: sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d.jenkins.list'
        become: yes

      - name: updating apt packages
        become: yes
        action: apt update_cache=yes state=latest

      - name: jenkins installation into server
        apt:
          name: jenkins
          state: present
          install_recommends: yes

      - name: download jenkins cli jar
        get_url:
          url: "{{ cli_jar_url }}"
          dest: "{{ jenkins_jar_location }}"
          mode: 755
      # #
      - name: slurp initial admin password
        slurp:
          src: /var/lib/jenkins/secrets/initialAdminPassword
        register: jenkins_admin_password
      #
      - name: install jenkins git and maven plugin using CLI jar
        command: java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/ install-plugin {{ item }} --username {{ jenkins_admin_username }} --password {{ jenkins_admin_password['content'] | b64decode }}
        with_items:
          - git
          - ant
        ignore_errors: True
        failed_when: False
        no_log: True

      - name: start jenkins on init changes
        service: name=jenkins state=restarted

      - name: wait for jenkins to start
        wait_for: port={{ jenkins_http_port }} delay = {{ jenkins_connection_delay }}

      - copy:
          src: /home/vagrant/vagrant_data/PatientsApp.xml
          dest: /var/lib/jenkins/PatientsApp.xml
          owner: jenkins
          group: jenkins
          mode: 0777

      # - name: list_jobs
      #   # shell: java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/ install-plugin {{ item }} --username {{ jenkins_admin_username }} --password {{ jenkins_admin_password['content'] | b64decode }}
      #   action: shell java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/ list-jobs  --username {{ jenkins_admin_username }} --password {{ jenkins_admin_password['content'] | b64decode }}
      #   register: list_jobs

      # - name: delete previous job
      #   command: java -jar {{jenkins_jar_location}} -s http://{{jenkins_hostname}}:{{jenkins_http_port}}/ delete-job {{job_name}}  --username {{jenkins_admin_username}} --password {{ jenkins_admin_password['content'] | b64decode }}
      #   when: list_jobs.stdout.find('PatientsApp') != -1

      - name: create job using jenkins cli jar
        command: java -jar {{jenkins_jar_location}} -s http://{{jenkins_hostname}}:{{jenkins_http_port}}/ create-job {{job_name}} < /var/lib/jenkins/PatientsApp.xml --username {{jenkins_admin_username}} --password {{ jenkins_admin_password['content'] | b64decode }}
        ignore_errors: yes

      - name: final job
        action: shell java -jar /home/vagrant/jenkins-cli.jar -s http://192.168.33.105:8080/ build JOB
